{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiBaseUrl; // Already includes '/api'\n  }\n\n  getHeaders() {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n  }\n  get(endpoint) {\n    return this.http.get(`${this.apiUrl}/${endpoint}`, {\n      headers: this.getHeaders()\n    });\n  }\n  post(endpoint, body) {\n    return this.http.post(`${this.apiUrl}/${endpoint}`, body, {\n      headers: this.getHeaders()\n    });\n  }\n  put(endpoint, id, body) {\n    return this.http.put(`${this.apiUrl}/${endpoint}/${id}`, body, {\n      headers: this.getHeaders()\n    });\n  }\n  delete(endpoint, id) {\n    return this.http.delete(`${this.apiUrl}/${endpoint}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","ApiService","constructor","http","apiUrl","apiBaseUrl","getHeaders","get","endpoint","headers","post","body","put","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\javacode\\angular-crud-ui\\src\\app\\shared\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private apiUrl = environment.apiBaseUrl; // Already includes '/api'\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    });\r\n  }\r\n\r\n  get<T>(endpoint: string): Observable<T> {\r\n    return this.http.get<T>(`${this.apiUrl}/${endpoint}`, {\r\n      headers: this.getHeaders()\r\n    });\r\n  }\r\n\r\n  post<T>(endpoint: string, body: any): Observable<T> {\r\n    return this.http.post<T>(`${this.apiUrl}/${endpoint}`, body, {\r\n      headers: this.getHeaders()\r\n    });\r\n  }\r\n\r\n  put<T>(endpoint: string, id: string, body: any): Observable<T> {\r\n    return this.http.put<T>(`${this.apiUrl}/${endpoint}/${id}`, body, {\r\n      headers: this.getHeaders()\r\n    });\r\n  }\r\n\r\n  delete<T>(endpoint: string, id: string): Observable<T> {\r\n    return this.http.delete<T>(`${this.apiUrl}/${endpoint}/${id}`, {\r\n      headers: this.getHeaders()\r\n    });\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACK,UAAU,CAAC,CAAC;EAEF;;EAE/BC,UAAUA,CAAA;IAChB,OAAO,IAAIP,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE;KACX,CAAC;EACJ;EAEAQ,GAAGA,CAAIC,QAAgB;IACrB,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAI,GAAG,IAAI,CAACH,MAAM,IAAII,QAAQ,EAAE,EAAE;MACpDC,OAAO,EAAE,IAAI,CAACH,UAAU;KACzB,CAAC;EACJ;EAEAI,IAAIA,CAAIF,QAAgB,EAAEG,IAAS;IACjC,OAAO,IAAI,CAACR,IAAI,CAACO,IAAI,CAAI,GAAG,IAAI,CAACN,MAAM,IAAII,QAAQ,EAAE,EAAEG,IAAI,EAAE;MAC3DF,OAAO,EAAE,IAAI,CAACH,UAAU;KACzB,CAAC;EACJ;EAEAM,GAAGA,CAAIJ,QAAgB,EAAEK,EAAU,EAAEF,IAAS;IAC5C,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAI,GAAG,IAAI,CAACR,MAAM,IAAII,QAAQ,IAAIK,EAAE,EAAE,EAAEF,IAAI,EAAE;MAChEF,OAAO,EAAE,IAAI,CAACH,UAAU;KACzB,CAAC;EACJ;EAEAQ,MAAMA,CAAIN,QAAgB,EAAEK,EAAU;IACpC,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAI,GAAG,IAAI,CAACV,MAAM,IAAII,QAAQ,IAAIK,EAAE,EAAE,EAAE;MAC7DJ,OAAO,EAAE,IAAI,CAACH,UAAU;KACzB,CAAC;EACJ;;;uBAlCWL,UAAU,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAVjB,UAAU;MAAAkB,OAAA,EAAVlB,UAAU,CAAAmB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}