{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { fadeInOut, listStagger } from '../../animations';\nexport let PurityListComponent = class PurityListComponent {\n  constructor(purityService, http, toast) {\n    this.purityService = purityService;\n    this.http = http;\n    this.toast = toast;\n    this.purities = [];\n    this.showFormFlag = false;\n    this.selectedPurity = {\n      name: '',\n      value: 0\n    };\n    this.page = 1;\n    this.itemsPerPage = 5;\n    this.sortField = 'name';\n    this.sortDirection = 'asc';\n    this.filterText = '';\n  }\n  ngOnInit() {\n    this.loadPurities();\n  }\n  loadPurities() {\n    this.purityService.getFilteredPurities(this.fromDate, this.toDate).subscribe((purities = []) => {\n      this.purities = purities || [];\n      this.sortPurity();\n    });\n  }\n  applyFilters() {\n    this.loadPurities();\n  }\n  showForm() {\n    this.selectedPurity = {\n      name: '',\n      value: 0\n    };\n    this.showFormFlag = true;\n  }\n  editPurity(purity) {\n    this.selectedPurity = {\n      ...purity\n    };\n    this.showFormFlag = true;\n  }\n  deletePurity(id) {\n    if (confirm('Are you sure you want to delete this purity?')) {\n      this.purityService.deletePurity(id).subscribe(() => this.loadPurities());\n    }\n  }\n  undo(id) {\n    if (!id) return;\n    this.http.post(`/api/purities/${id}/undo`, {}).subscribe({\n      next: restored => {\n        this.loadPurities();\n        this.toast.show('Undo successful', 'Close');\n      },\n      error: err => {\n        this.toast.show('Undo failed: ' + err.message, 'Close');\n      }\n    });\n  }\n  handleFormSubmit(purity) {\n    const action = purity.id ? this.purityService.updatePurity(purity.id, purity) : this.purityService.createPurity(purity);\n    action.subscribe(() => {\n      this.loadPurities();\n      this.hideForm();\n    });\n  }\n  hideForm() {\n    this.showFormFlag = false;\n  }\n  toggleSort(field) {\n    if (this.sortField === field) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortField = field;\n      this.sortDirection = 'asc';\n    }\n    this.sortPurity();\n  }\n  sortPurity() {\n    if (!this.purities || this.purities.length < 2) return;\n    this.purities.sort((a, b) => {\n      const valA = a[this.sortField];\n      const valB = b[this.sortField];\n      const strA = typeof valA === 'string' ? valA.toLowerCase() : String(valA);\n      const strB = typeof valB === 'string' ? valB.toLowerCase() : String(valB);\n      return this.sortDirection === 'asc' ? strA.localeCompare(strB) : strB.localeCompare(strA);\n    });\n  }\n  get filteredPurities() {\n    return (this.purities ?? []).filter(p => p.name.toLowerCase().includes(this.filterText.toLowerCase()));\n  }\n  onPageChange(pageNum) {\n    this.page = pageNum;\n  }\n};\nPurityListComponent = __decorate([Component({\n  selector: 'app-purity-list',\n  templateUrl: './purity-list.component.html',\n  styleUrls: ['./purity-list.component.css'],\n  animations: [fadeInOut, listStagger]\n})], PurityListComponent);","map":{"version":3,"names":["Component","fadeInOut","listStagger","PurityListComponent","constructor","purityService","http","toast","purities","showFormFlag","selectedPurity","name","value","page","itemsPerPage","sortField","sortDirection","filterText","ngOnInit","loadPurities","getFilteredPurities","fromDate","toDate","subscribe","sortPurity","applyFilters","showForm","editPurity","purity","deletePurity","id","confirm","undo","post","next","restored","show","error","err","message","handleFormSubmit","action","updatePurity","createPurity","hideForm","toggleSort","field","length","sort","a","b","valA","valB","strA","toLowerCase","String","strB","localeCompare","filteredPurities","filter","p","includes","onPageChange","pageNum","__decorate","selector","templateUrl","styleUrls","animations"],"sources":["D:\\javacode\\angular-crud-ui\\src\\app\\purity\\purity-list\\purity-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PurityService, Purity } from '../purity.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastService } from '../../shared/toast.service'; // adjust if using MatSnackBar\r\nimport { fadeInOut, listStagger } from '../../animations';\r\n\r\n@Component({\r\n  selector: 'app-purity-list',\r\n  templateUrl: './purity-list.component.html',\r\n  styleUrls: ['./purity-list.component.css'],\r\n  animations: [fadeInOut, listStagger]\r\n})\r\nexport class PurityListComponent implements OnInit {\r\n  purities: Purity[] = [];\r\n  showFormFlag = false;\r\n  selectedPurity: Purity = { name: '', value: 0 };\r\n\r\n  page: number = 1;\r\n  itemsPerPage: number = 5;\r\n\r\n  sortField: keyof Purity = 'name';\r\n  sortDirection: 'asc' | 'desc' = 'asc';\r\n\r\n  filterText: string = '';\r\n  fromDate?: string;\r\n  toDate?: string;\r\n\r\n  constructor(\r\n    private purityService: PurityService,\r\n    private http: HttpClient,\r\n    private toast: ToastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPurities();\r\n  }\r\n\r\n  loadPurities(): void {\r\n    this.purityService.getFilteredPurities(this.fromDate, this.toDate).subscribe((purities: Purity[] = []) => {\r\n      this.purities = purities || [];\r\n      this.sortPurity();\r\n    });\r\n  }\r\n\r\n  applyFilters(): void {\r\n    this.loadPurities();\r\n  }\r\n\r\n  showForm(): void {\r\n    this.selectedPurity = { name: '', value: 0 };\r\n    this.showFormFlag = true;\r\n  }\r\n\r\n  editPurity(purity: Purity): void {\r\n    this.selectedPurity = { ...purity };\r\n    this.showFormFlag = true;\r\n  }\r\n\r\n  deletePurity(id: string): void {\r\n    if (confirm('Are you sure you want to delete this purity?')) {\r\n      this.purityService.deletePurity(id).subscribe(() => this.loadPurities());\r\n    }\r\n  }\r\n\r\n  undo(id: string): void {\r\n    if (!id) return;\r\n\r\n    this.http.post<Purity>(`/api/purities/${id}/undo`, {}).subscribe({\r\n      next: (restored: Purity) => {\r\n        this.loadPurities();\r\n        this.toast.show('Undo successful', 'Close');\r\n      },\r\n      error: (err: any) => {\r\n        this.toast.show('Undo failed: ' + err.message, 'Close');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleFormSubmit(purity: Purity): void {\r\n    const action = purity.id\r\n      ? this.purityService.updatePurity(purity.id, purity)\r\n      : this.purityService.createPurity(purity);\r\n\r\n    action.subscribe(() => {\r\n      this.loadPurities();\r\n      this.hideForm();\r\n    });\r\n  }\r\n\r\n  hideForm(): void {\r\n    this.showFormFlag = false;\r\n  }\r\n\r\n  toggleSort(field: keyof Purity): void {\r\n    if (this.sortField === field) {\r\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortField = field;\r\n      this.sortDirection = 'asc';\r\n    }\r\n    this.sortPurity();\r\n  }\r\n\r\n  sortPurity(): void {\r\n    if (!this.purities || this.purities.length < 2) return;\r\n\r\n    this.purities.sort((a, b) => {\r\n      const valA = a[this.sortField];\r\n      const valB = b[this.sortField];\r\n\r\n      const strA = typeof valA === 'string' ? valA.toLowerCase() : String(valA);\r\n      const strB = typeof valB === 'string' ? valB.toLowerCase() : String(valB);\r\n\r\n      return this.sortDirection === 'asc'\r\n        ? strA.localeCompare(strB)\r\n        : strB.localeCompare(strA);\r\n    });\r\n  }\r\n\r\n  get filteredPurities(): Purity[] {\r\n    return (this.purities ?? []).filter(p =>\r\n      p.name.toLowerCase().includes(this.filterText.toLowerCase())\r\n    );\r\n  }\r\n\r\n  onPageChange(pageNum: number): void {\r\n    this.page = pageNum;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}