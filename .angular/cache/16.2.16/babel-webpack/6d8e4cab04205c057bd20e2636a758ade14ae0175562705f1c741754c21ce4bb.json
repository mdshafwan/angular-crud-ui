{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { fadeInOut, listStagger } from '../../animations';\nexport let MetalRateListComponent = class MetalRateListComponent {\n  constructor(metalRateService, metalService, purityService) {\n    this.metalRateService = metalRateService;\n    this.metalService = metalService;\n    this.purityService = purityService;\n    this.metalRates = [];\n    this.metals = [];\n    this.purities = [];\n    this.showFormFlag = false;\n    this.selectedMetalRate = {\n      id: '',\n      metalId: '',\n      purityId: '',\n      rate: 0,\n      effectiveDate: new Date().toISOString().split('T')[0]\n    };\n    this.loading = true;\n    this.loadingMetals = true;\n    this.loadingPurities = true;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.loadMetalRates();\n    this.loadMetals();\n    this.loadPurities();\n  }\n  loadMetalRates() {\n    this.loading = true;\n    this.metalRateService.getAllMetalRates().subscribe({\n      next: rates => {\n        this.metalRates = rates;\n        this.loading = false;\n      },\n      error: err => {\n        console.error('Error loading metal rates:', err);\n        this.loading = false;\n        alert('Failed to load metal rates');\n      }\n    });\n  }\n  loadMetals() {\n    this.loadingMetals = true;\n    this.metalService.getAllMetals().subscribe({\n      next: metals => {\n        this.metals = metals;\n        this.loadingMetals = false;\n      },\n      error: err => {\n        console.error('Error loading metals:', err);\n        this.loadingMetals = false;\n        alert('Failed to load metals');\n      }\n    });\n  }\n  loadPurities() {\n    this.loadingPurities = true;\n    this.purityService.getAllpurity().subscribe({\n      next: purities => {\n        this.purities = purities;\n        this.loadingPurities = false;\n      },\n      error: err => {\n        console.error('Error loading purities:', err);\n        this.loadingPurities = false;\n        alert('Failed to load purities');\n      }\n    });\n  }\n  showForm() {\n    this.selectedMetalRate = {\n      id: '',\n      metalId: this.metals[0]?.id || '',\n      purityId: this.purities[0]?.id || '',\n      rate: 0,\n      effectiveDate: new Date().toISOString().split('T')[0]\n    };\n    this.showFormFlag = true;\n    this.scrollToBottom();\n  }\n  editMetalRate(rate) {\n    this.selectedMetalRate = {\n      ...rate\n    };\n    this.showFormFlag = true;\n    this.scrollToBottom();\n  }\n  scrollToBottom() {\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth'\n    });\n  }\n  deleteMetalRate(id) {\n    if (confirm('Are you sure you want to delete this metal rate?')) {\n      this.metalRateService.deleteMetalRate(id).subscribe({\n        next: () => {\n          this.metalRates = this.metalRates.filter(r => r.id !== id);\n        },\n        error: err => {\n          console.error('Error deleting metal rate:', err);\n          alert('Failed to delete metal rate');\n        }\n      });\n    }\n  }\n  handleFormSubmit(rate) {\n    const operation = rate.id ? 'update' : 'create';\n    const observable = rate.id ? this.metalRateService.updateMetalRate(rate.id, rate) : this.metalRateService.createMetalRate(rate);\n    observable.subscribe({\n      next: savedRate => {\n        if (rate.id) {\n          const index = this.metalRates.findIndex(r => r.id === savedRate.id);\n          if (index > -1) this.metalRates[index] = savedRate;\n        } else {\n          this.metalRates = [...this.metalRates, savedRate];\n        }\n        this.hideForm();\n      },\n      error: err => {\n        console.error(`Error ${operation}ing metal rate:`, err);\n        alert(`Failed to ${operation} metal rate`);\n      }\n    });\n  }\n  hideForm() {\n    this.showFormFlag = false;\n  }\n  getMetalName(metalId) {\n    const metal = this.metals.find(m => m.id === metalId);\n    return metal?.name || 'Unknown Metal';\n  }\n  getMetalSymbol(metalId) {\n    const metal = this.metals.find(m => m.id === metalId);\n    return metal?.symbol || '?';\n  }\n  getPurityValue(purityId) {\n    const purity = this.purities.find(p => p.id === purityId);\n    return purity?.value || 0;\n  }\n  trackById(index, item) {\n    return item.id;\n  }\n};\nMetalRateListComponent = __decorate([Component({\n  selector: 'app-metal-rate-list',\n  templateUrl: './metal-rate-list.component.html',\n  styleUrls: ['./metal-rate-list.component.css'],\n  animations: [fadeInOut, listStagger]\n})], MetalRateListComponent);","map":{"version":3,"names":["Component","fadeInOut","listStagger","MetalRateListComponent","constructor","metalRateService","metalService","purityService","metalRates","metals","purities","showFormFlag","selectedMetalRate","id","metalId","purityId","rate","effectiveDate","Date","toISOString","split","loading","loadingMetals","loadingPurities","ngOnInit","loadData","loadMetalRates","loadMetals","loadPurities","getAllMetalRates","subscribe","next","rates","error","err","console","alert","getAllMetals","getAllpurity","showForm","scrollToBottom","editMetalRate","window","scrollTo","top","document","body","scrollHeight","behavior","deleteMetalRate","confirm","filter","r","handleFormSubmit","operation","observable","updateMetalRate","createMetalRate","savedRate","index","findIndex","hideForm","getMetalName","metal","find","m","name","getMetalSymbol","symbol","getPurityValue","purity","p","value","trackById","item","__decorate","selector","templateUrl","styleUrls","animations"],"sources":["D:\\javacode\\angular-crud-ui\\src\\app\\metal-rate\\metal-rate-list\\metal-rate-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MetalRateService, MetalRate } from '../metal-rate.service';\r\nimport { MetalService, Metal } from '../../metal/metal.service';\r\nimport { PurityService, Purity } from '../../purity/purity.service';\r\nimport { fadeInOut, listStagger } from '../../animations';\r\n\r\n@Component({\r\n  selector: 'app-metal-rate-list',\r\n  templateUrl: './metal-rate-list.component.html',\r\n  styleUrls: ['./metal-rate-list.component.css'],\r\n  animations: [fadeInOut, listStagger]\r\n})\r\nexport class MetalRateListComponent implements OnInit {\r\n  metalRates: MetalRate[] = [];\r\n  metals: Metal[] = [];\r\n  purities: Purity[] = [];\r\n  showFormFlag = false;\r\n  selectedMetalRate: MetalRate = { \r\n    id: '', \r\n    metalId: '', \r\n    purityId: '', \r\n    rate: 0, \r\n    effectiveDate: new Date().toISOString().split('T')[0] \r\n  };\r\n  loading = true;\r\n  loadingMetals = true;\r\n  loadingPurities = true;\r\n\r\n  constructor(\r\n    private metalRateService: MetalRateService,\r\n    private metalService: MetalService,\r\n    private purityService: PurityService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData(): void {\r\n    this.loadMetalRates();\r\n    this.loadMetals();\r\n    this.loadPurities();\r\n  }\r\n\r\n  loadMetalRates(): void {\r\n    this.loading = true;\r\n    this.metalRateService.getAllMetalRates().subscribe({\r\n      next: (rates: MetalRate[]) => {\r\n        this.metalRates = rates;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading metal rates:', err);\r\n        this.loading = false;\r\n        alert('Failed to load metal rates');\r\n      }\r\n    });\r\n  }\r\n\r\n  loadMetals(): void {\r\n    this.loadingMetals = true;\r\n    this.metalService.getAllMetals().subscribe({\r\n      next: (metals: Metal[]) => {\r\n        this.metals = metals;\r\n        this.loadingMetals = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading metals:', err);\r\n        this.loadingMetals = false;\r\n        alert('Failed to load metals');\r\n      }\r\n    });\r\n  }\r\n\r\n  loadPurities(): void {\r\n    this.loadingPurities = true;\r\n    this.purityService.getAllpurity().subscribe({\r\n      next: (purities: Purity[]) => {\r\n        this.purities = purities;\r\n        this.loadingPurities = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading purities:', err);\r\n        this.loadingPurities = false;\r\n        alert('Failed to load purities');\r\n      }\r\n    });\r\n  }\r\n\r\n  showForm(): void {\r\n    this.selectedMetalRate = { \r\n      id: '', \r\n      metalId: this.metals[0]?.id || '',  // Default to first metal if available\r\n      purityId: this.purities[0]?.id || '',  // Default to first purity if available\r\n      rate: 0, \r\n      effectiveDate: new Date().toISOString().split('T')[0] \r\n    };\r\n    this.showFormFlag = true;\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  editMetalRate(rate: MetalRate): void {\r\n    this.selectedMetalRate = { ...rate };\r\n    this.showFormFlag = true;\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\r\n  }\r\n\r\n  deleteMetalRate(id: string): void {\r\n  if (confirm('Are you sure you want to delete this metal rate?')) {\r\n    this.metalRateService.deleteMetalRate(id).subscribe({\r\n      next: () => {\r\n        this.metalRates = this.metalRates.filter(r => r.id !== id);\r\n      },\r\n      error: (err) => {\r\n        console.error('Error deleting metal rate:', err);\r\n        alert('Failed to delete metal rate');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n  handleFormSubmit(rate: MetalRate): void {\r\n    const operation = rate.id ? 'update' : 'create';\r\n    \r\n    const observable = rate.id \r\n      ? this.metalRateService.updateMetalRate(rate.id, rate)\r\n      : this.metalRateService.createMetalRate(rate);\r\n\r\n    observable.subscribe({\r\n      next: (savedRate) => {\r\n        if (rate.id) {\r\n          const index = this.metalRates.findIndex(r => r.id === savedRate.id);\r\n          if (index > -1) this.metalRates[index] = savedRate;\r\n        } else {\r\n          this.metalRates = [...this.metalRates, savedRate];\r\n        }\r\n        this.hideForm();\r\n      },\r\n      error: (err) => {\r\n        console.error(`Error ${operation}ing metal rate:`, err);\r\n        alert(`Failed to ${operation} metal rate`);\r\n      }\r\n    });\r\n  }\r\n\r\n  hideForm(): void {\r\n    this.showFormFlag = false;\r\n  }\r\n\r\n  getMetalName(metalId: string): string {\r\n    const metal = this.metals.find(m => m.id === metalId);\r\n    return metal?.name || 'Unknown Metal';\r\n  }\r\n\r\n  getMetalSymbol(metalId: string): string {\r\n    const metal = this.metals.find(m => m.id === metalId);\r\n    return metal?.symbol || '?';\r\n  }\r\n\r\n  getPurityValue(purityId: string): number {\r\n    const purity = this.purities.find(p => p.id === purityId);\r\n    return purity?.value || 0;\r\n  }\r\n\r\n  trackById(index: number, item: any): number {\r\n    return item.id;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}