{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { fadeInOut, listStagger } from '../../animations';\nexport let UserListComponent = class UserListComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.users = [];\n    this.selectedUser = this.createEmptyUser();\n    this.showFormFlag = false;\n    this.loading = true;\n    this.page = 1;\n    this.itemsPerPage = 5;\n    this.filterText = '';\n    // ✅ Multi-column sort stack\n    this.sortStack = [];\n  }\n  ngOnInit() {\n    this.loadUsers();\n  }\n  createEmptyUser() {\n    return {\n      name: '',\n      email: ''\n    };\n  }\n  loadUsers() {\n    this.loading = true;\n    this.userService.getAllUsers().subscribe({\n      next: data => {\n        this.users = data;\n        this.sortUsers();\n        this.loading = false;\n      },\n      error: () => this.loading = false\n    });\n  }\n  toggleSort(field) {\n    const existing = this.sortStack.find(s => s.field === field);\n    if (existing) {\n      existing.direction = existing.direction === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortStack.push({\n        field,\n        direction: 'asc'\n      });\n    }\n    this.sortUsers();\n  }\n  getSortIcon(field) {\n    const sort = this.sortStack.find(s => s.field === field);\n    return sort ? sort.direction === 'asc' ? '↑' : '↓' : '';\n  }\n  getSortDirection(field) {\n    return this.sortStack.find(s => s.field === field)?.direction;\n  }\n  sortUsers() {\n    const stack = [...this.sortStack];\n    this.users.sort((a, b) => {\n      for (const s of stack) {\n        const valA = (a[s.field] ?? '').toString().toLowerCase();\n        const valB = (b[s.field] ?? '').toString().toLowerCase();\n        const cmp = valA.localeCompare(valB);\n        if (cmp !== 0) return s.direction === 'asc' ? cmp : -cmp;\n      }\n      return 0;\n    });\n  }\n  applyFilters() {\n    // Empty hook — filtering is driven by `filteredUsers` getter\n  }\n  get filteredUsers() {\n    return this.users.filter(u => (u.name ?? '').toLowerCase().includes(this.filterText.toLowerCase()) || (u.email ?? '').toLowerCase().includes(this.filterText.toLowerCase())).filter(u => {\n      const purity = u.purity ?? 0;\n      const matchesPurity = (this.minPurity === undefined || purity >= this.minPurity) && (this.maxPurity === undefined || purity <= this.maxPurity);\n      const createdAt = u.createdAt ? new Date(u.createdAt).getTime() : 0;\n      const from = this.fromDate ? new Date(this.fromDate).getTime() : -Infinity;\n      const to = this.toDate ? new Date(this.toDate).getTime() : Infinity;\n      const matchesDate = createdAt >= from && createdAt <= to;\n      return matchesPurity && matchesDate;\n    });\n  }\n  showForm() {\n    this.selectedUser = this.createEmptyUser();\n    this.showFormFlag = true;\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth'\n    });\n  }\n  editUser(user) {\n    this.selectedUser = {\n      ...user\n    };\n    this.showFormFlag = true;\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth'\n    });\n  }\n  deleteUser(id) {\n    if (!id) return;\n    this.userService.deleteUser(id).subscribe({\n      next: () => {\n        this.users = this.users.filter(u => u.id !== id);\n      },\n      error: () => alert('Failed to delete user')\n    });\n  }\n  handleFormSubmit(user) {\n    if (user.id) {\n      this.userService.updateUser(user.id, user).subscribe({\n        next: updated => {\n          const index = this.users.findIndex(u => u.id === updated.id);\n          if (index > -1) this.users[index] = updated;\n          this.sortUsers();\n          this.hideForm();\n        },\n        error: () => alert('Failed to update user')\n      });\n    } else {\n      this.userService.createUser(user).subscribe({\n        next: newUser => {\n          this.users = [...this.users, newUser];\n          this.sortUsers();\n          this.hideForm();\n        },\n        error: () => alert('Failed to create user')\n      });\n    }\n  }\n  hideForm() {\n    this.showFormFlag = false;\n    this.selectedUser = this.createEmptyUser();\n  }\n};\nUserListComponent = __decorate([Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n  animations: [fadeInOut, listStagger]\n})], UserListComponent);","map":{"version":3,"names":["Component","fadeInOut","listStagger","UserListComponent","constructor","userService","users","selectedUser","createEmptyUser","showFormFlag","loading","page","itemsPerPage","filterText","sortStack","ngOnInit","loadUsers","name","email","getAllUsers","subscribe","next","data","sortUsers","error","toggleSort","field","existing","find","s","direction","push","getSortIcon","sort","getSortDirection","stack","a","b","valA","toString","toLowerCase","valB","cmp","localeCompare","applyFilters","filteredUsers","filter","u","includes","purity","matchesPurity","minPurity","undefined","maxPurity","createdAt","Date","getTime","from","fromDate","Infinity","to","toDate","matchesDate","showForm","window","scrollTo","top","document","body","scrollHeight","behavior","editUser","user","deleteUser","id","alert","handleFormSubmit","updateUser","updated","index","findIndex","hideForm","createUser","newUser","__decorate","selector","templateUrl","styleUrls","animations"],"sources":["D:\\javacode\\angular-crud-ui\\src\\app\\user\\user-list\\user-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UserService, User } from '../user.service';\r\nimport { fadeInOut, listStagger } from '../../animations';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css'],\r\n  animations: [fadeInOut, listStagger]\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: User[] = [];\r\n  selectedUser: User = this.createEmptyUser();\r\n  showFormFlag = false;\r\n  loading = true;\r\n\r\n  page = 1;\r\n  itemsPerPage = 5;\r\n  filterText = '';\r\n\r\n  // ✅ Multi-column sort stack\r\n  sortStack: { field: keyof User; direction: 'asc' | 'desc' }[] = [];\r\n\r\n  // ✅ Range filter inputs\r\n  minPurity?: number;\r\n  maxPurity?: number;\r\n  fromDate?: string;\r\n  toDate?: string;\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadUsers();\r\n  }\r\n\r\n  private createEmptyUser(): User {\r\n    return { name: '', email: '' };\r\n  }\r\n\r\n  loadUsers(): void {\r\n    this.loading = true;\r\n    this.userService.getAllUsers().subscribe({\r\n      next: data => {\r\n        this.users = data;\r\n        this.sortUsers();\r\n        this.loading = false;\r\n      },\r\n      error: () => (this.loading = false)\r\n    });\r\n  }\r\n\r\n  toggleSort(field: keyof User): void {\r\n    const existing = this.sortStack.find(s => s.field === field);\r\n    if (existing) {\r\n      existing.direction = existing.direction === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortStack.push({ field, direction: 'asc' });\r\n    }\r\n    this.sortUsers();\r\n  }\r\n\r\n  getSortIcon(field: keyof User): string {\r\n    const sort = this.sortStack.find(s => s.field === field);\r\n    return sort ? (sort.direction === 'asc' ? '↑' : '↓') : '';\r\n  }\r\n\r\n  getSortDirection(field: keyof User): 'asc' | 'desc' | undefined {\r\n    return this.sortStack.find(s => s.field === field)?.direction;\r\n  }\r\n\r\n  sortUsers(): void {\r\n    const stack = [...this.sortStack];\r\n    this.users.sort((a, b) => {\r\n      for (const s of stack) {\r\n        const valA = (a[s.field] ?? '').toString().toLowerCase();\r\n        const valB = (b[s.field] ?? '').toString().toLowerCase();\r\n        const cmp = valA.localeCompare(valB);\r\n        if (cmp !== 0) return s.direction === 'asc' ? cmp : -cmp;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  applyFilters(): void {\r\n    // Empty hook — filtering is driven by `filteredUsers` getter\r\n  }\r\n\r\n  get filteredUsers(): User[] {\r\n    return this.users\r\n      .filter(u =>\r\n        (u.name ?? '').toLowerCase().includes(this.filterText.toLowerCase()) ||\r\n        (u.email ?? '').toLowerCase().includes(this.filterText.toLowerCase())\r\n      )\r\n      .filter(u => {\r\n        const purity = u.purity ?? 0;\r\n        const matchesPurity =\r\n          (this.minPurity === undefined || purity >= this.minPurity) &&\r\n          (this.maxPurity === undefined || purity <= this.maxPurity);\r\n\r\n        const createdAt = u.createdAt ? new Date(u.createdAt).getTime() : 0;\r\n        const from = this.fromDate ? new Date(this.fromDate).getTime() : -Infinity;\r\n        const to = this.toDate ? new Date(this.toDate).getTime() : Infinity;\r\n        const matchesDate = createdAt >= from && createdAt <= to;\r\n\r\n        return matchesPurity && matchesDate;\r\n      });\r\n  }\r\n\r\n  showForm(): void {\r\n    this.selectedUser = this.createEmptyUser();\r\n    this.showFormFlag = true;\r\n    window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\r\n  }\r\n\r\n  editUser(user: User): void {\r\n    this.selectedUser = { ...user };\r\n    this.showFormFlag = true;\r\n    window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\r\n  }\r\n\r\n  deleteUser(id?: string): void {\r\n    if (!id) return;\r\n    this.userService.deleteUser(id).subscribe({\r\n      next: () => {\r\n        this.users = this.users.filter(u => u.id !== id);\r\n      },\r\n      error: () => alert('Failed to delete user')\r\n    });\r\n  }\r\n\r\n  handleFormSubmit(user: User): void {\r\n    if (user.id) {\r\n      this.userService.updateUser(user.id, user).subscribe({\r\n        next: updated => {\r\n          const index = this.users.findIndex(u => u.id === updated.id);\r\n          if (index > -1) this.users[index] = updated;\r\n          this.sortUsers();\r\n          this.hideForm();\r\n        },\r\n        error: () => alert('Failed to update user')\r\n      });\r\n    } else {\r\n      this.userService.createUser(user).subscribe({\r\n        next: newUser => {\r\n          this.users = [...this.users, newUser];\r\n          this.sortUsers();\r\n          this.hideForm();\r\n        },\r\n        error: () => alert('Failed to create user')\r\n      });\r\n    }\r\n  }\r\n\r\n  hideForm(): void {\r\n    this.showFormFlag = false;\r\n    this.selectedUser = this.createEmptyUser();\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}