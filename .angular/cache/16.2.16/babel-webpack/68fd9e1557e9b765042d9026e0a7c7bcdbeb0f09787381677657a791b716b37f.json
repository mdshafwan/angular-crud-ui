{"ast":null,"code":"import { RouterModule } from '@angular/router';\n// ðŸ“¦ Existing Components\nimport { PurityListComponent } from './purity/purity-list/purity-list.component';\nimport { MetalRateComponent } from './metal-rate/metal-rate-list/metal-rate-list.component';\nimport { MetalListComponent } from './metal/metal-list/metal-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// ðŸ§± Optional placeholder component (in case others aren't built yet)\n// Uncomment the lines below if you want placeholders\n// import { DashboardPlaceholderComponent } from './placeholders/dashboard-placeholder.component';\nconst routes = [{\n  path: '',\n  redirectTo: 'metals',\n  pathMatch: 'full'\n}, {\n  path: 'metals',\n  component: MetalListComponent\n}, {\n  path: 'purities',\n  component: PurityListComponent\n}, {\n  path: 'metal-rates',\n  component: MetalRateComponent\n}\n// ðŸ”’ Optional future components â€” uncomment when available\n// { path: 'dashboard', component: DashboardComponent },\n// { path: 'analytics', component: AnalyticsComponent },\n// { path: 'settings', component: SettingsComponent },\n// { path: 'users', component: UsersComponent },\n// { path: 'security', component: SecurityComponent },\n// ðŸš¨ Catch-all route for 404\n// { path: '**', component: PageNotFoundComponent }\n];\n\nexport class AppRoutingModule {\n  static {\n    this.Éµfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.Éµmod = /*@__PURE__*/i0.ÉµÉµdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.Éµinj = /*@__PURE__*/i0.ÉµÉµdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ÉµÉµsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","PurityListComponent","MetalRateComponent","MetalListComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["D:\\javacode\\angular-crud-ui\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// ðŸ“¦ Existing Components\r\nimport { PurityListComponent } from './purity/purity-list/purity-list.component';\r\nimport { MetalRateComponent } from './metal-rate/metal-rate-list/metal-rate-list.component';\r\nimport { MetalListComponent } from './metal/metal-list/metal-list.component';\r\n\r\n// ðŸ§± Optional placeholder component (in case others aren't built yet)\r\n// Uncomment the lines below if you want placeholders\r\n// import { DashboardPlaceholderComponent } from './placeholders/dashboard-placeholder.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'metals', pathMatch: 'full' }, // default route\r\n  { path: 'metals', component: MetalListComponent },\r\n  { path: 'purities', component: PurityListComponent },\r\n  { path: 'metal-rates', component: MetalRateComponent },\r\n\r\n  // ðŸ”’ Optional future components â€” uncomment when available\r\n  // { path: 'dashboard', component: DashboardComponent },\r\n  // { path: 'analytics', component: AnalyticsComponent },\r\n  // { path: 'settings', component: SettingsComponent },\r\n  // { path: 'users', component: UsersComponent },\r\n  // { path: 'security', component: SecurityComponent },\r\n\r\n  // ðŸš¨ Catch-all route for 404\r\n  // { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD;AACA,SAASC,mBAAmB,QAAQ,4CAA4C;AAChF,SAASC,kBAAkB,QAAQ,wDAAwD;AAC3F,SAASC,kBAAkB,QAAQ,yCAAyC;;;AAE5E;AACA;AACA;AAEA,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EAAEF,IAAI,EAAE,QAAQ;EAAEG,SAAS,EAAEL;AAAkB,CAAE,EACjD;EAAEE,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAEP;AAAmB,CAAE,EACpD;EAAEI,IAAI,EAAE,aAAa;EAAEG,SAAS,EAAEN;AAAkB;AAEpD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA,CACD;;AAMD,OAAM,MAAOO,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBT,YAAY,CAACU,OAAO,CAACN,MAAM,CAAC,EAC5BJ,YAAY;IAAA;EAAA;;;2EAEXS,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAZ,YAAA;IAAAa,OAAA,GAFjBb,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}