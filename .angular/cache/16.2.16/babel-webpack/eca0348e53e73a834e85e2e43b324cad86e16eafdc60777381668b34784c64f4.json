{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PurityService {\n  constructor(api) {\n    this.api = api;\n    this.apiUrl = `${environment.apiBaseUrl}/purity`;\n  }\n  getAllpurity() {\n    return this.api.get(this.apiUrl);\n  }\n  createPurity(purity) {\n    return this.http.post(this.apiUrl, purity);\n  }\n  updatePurity(id, purity) {\n    return this.http.put(`${this.apiUrl}/${id}`, purity);\n  }\n  deletePurity(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PurityService_Factory(t) {\n      return new (t || PurityService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PurityService,\n      factory: PurityService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","PurityService","constructor","api","apiUrl","apiBaseUrl","getAllpurity","get","createPurity","purity","http","post","updatePurity","id","put","deletePurity","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\javacode\\metal-purity-ui\\src\\app\\purity\\purity.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiService } from '../shared/api.service';\r\n\r\nexport interface Purity {\r\n  id?: string;\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PurityService {\r\n  private apiUrl = `${environment.apiBaseUrl}/purity`;\r\n\r\n  constructor(private api: HttpClient) { }\r\n\r\n  getAllpurity(): Observable<Purity[]> {\r\n    return this.api.get<Purity[]>(this.apiUrl);\r\n  }\r\n\r\n  createPurity(purity: Purity): Observable<Purity> {\r\n    return this.http.post<Purity>(this.apiUrl, purity);\r\n  }\r\n\r\n  updatePurity(id: string, purity: Purity): Observable<Purity> {\r\n    return this.http.put<Purity>(`${this.apiUrl}/${id}`, purity);\r\n  }\r\n\r\n  deletePurity(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAY1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,GAAe;IAAf,KAAAA,GAAG,GAAHA,GAAG;IAFf,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,SAAS;EAEZ;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,GAAG,CAACI,GAAG,CAAW,IAAI,CAACH,MAAM,CAAC;EAC5C;EAEAI,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAS,IAAI,CAACP,MAAM,EAAEK,MAAM,CAAC;EACpD;EAEAG,YAAYA,CAACC,EAAU,EAAEJ,MAAc;IACrC,OAAO,IAAI,CAACC,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACV,MAAM,IAAIS,EAAE,EAAE,EAAEJ,MAAM,CAAC;EAC9D;EAEAM,YAAYA,CAACF,EAAU;IACrB,OAAO,IAAI,CAACH,IAAI,CAACM,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIS,EAAE,EAAE,CAAC;EACvD;;;uBAnBWZ,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbnB,aAAa;MAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}