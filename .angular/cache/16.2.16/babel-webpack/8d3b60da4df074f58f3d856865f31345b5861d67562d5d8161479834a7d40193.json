{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PurityService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/purity';\n  }\n  getAllpurity() {\n    return this.http.get(this.apiUrl);\n  }\n  createPurity(purity) {\n    return this.http.post(this.apiUrl, purity);\n  }\n  updatePurity(id, purity) {\n    return this.http.put(`${this.apiUrl}/${id}`, purity);\n  }\n  deletePurity(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PurityService_Factory(t) {\n      return new (t || PurityService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PurityService,\n      factory: PurityService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PurityService","constructor","http","apiUrl","getAllpurity","get","createPurity","purity","post","updatePurity","id","put","deletePurity","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\javacode\\angular-crud-ui\\src\\app\\purity\\purity.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Purity {\r\n  id?: string;\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PurityService {\r\n  private apiUrl = 'http://localhost:8080/api/purity';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllpurity(): Observable<Purity[]> {\r\n    return this.http.get<Purity[]>(this.apiUrl);\r\n  }\r\n\r\n  createPurity(purity: Purity): Observable<Purity> {\r\n    return this.http.post<Purity>(this.apiUrl, purity);\r\n  }\r\n\r\n  updatePurity(id: number, purity: Purity): Observable<Purity> {\r\n    return this.http.put<Purity>(`${this.apiUrl}/${id}`, purity);\r\n  }\r\n\r\n  deletePurity(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}"],"mappings":";;AAaA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAEX;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,MAAM,CAAC;EAC7C;EAEAG,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,IAAI,CAACL,MAAM,EAAEI,MAAM,CAAC;EACpD;EAEAE,YAAYA,CAACC,EAAU,EAAEH,MAAc;IACrC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,EAAEH,MAAM,CAAC;EAC9D;EAEAK,YAAYA,CAACF,EAAU;IACrB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIO,EAAE,EAAE,CAAC;EACvD;;;uBAnBWV,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbjB,aAAa;MAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}